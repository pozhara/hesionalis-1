# Generated by Django 3.2.20 on 2023-07-18 13:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image_url', models.CharField(max_length=200, null=True)),
                ('skills', models.CharField(blank=True, choices=[('Neo Traditional', 'Neo Traditional'), ('Fine Line', 'Fine Line'), ('Tribal', 'Tribal'), ('Watercolor', 'Watercolor'), ('Blackwork', 'Blackwork'), ('Realism', 'Realism'), ('Japanese', 'Japanese'), ('Patchwork', 'Patchwork'), ('Ignorant', 'Ignorant'), ('Portrait', 'Portrait'), ('Animal', 'Animal'), ('Floral', 'Floral')], max_length=30, null=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Nonbinary', 'Nonbinary'), ('Other', 'Other')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Design',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.CharField(max_length=200, null=True)),
                ('category', models.CharField(choices=[('Neo Traditional', 'Neo Traditional'), ('Fine Line', 'Fine Line'), ('Tribal', 'Tribal'), ('Watercolor', 'Watercolor'), ('Blackwork', 'Blackwork'), ('Realism', 'Realism'), ('Japanese', 'Japanese'), ('Patchwork', 'Patchwork'), ('Ignorant', 'Ignorant'), ('Portrait', 'Portrait'), ('Animal', 'Animal'), ('Floral', 'Floral')], max_length=100)),
                ('artist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='design_artist', to='core.artist')),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('tattoo_location', models.CharField(blank=True, choices=[('Ear', 'Ear'), ('Neck', 'Neck'), ('Shoudler', 'Shoulder'), ('Bicep', 'Bicep'), ('Forearm', 'Forearm'), ('Arm', 'Arm'), ('Chest', 'Chest'), ('Sternum', 'Sternum'), ('Stomach', 'Stomach'), ('Hip', 'Hip'), ('Thigh', 'Thigh'), ('Knee', 'Knee'), ('Calf', 'Calf'), ('Shin', 'Shin'), ('Ankle', 'Ankle'), ('Foot', 'Foot')], max_length=30, null=True)),
                ('tattoo_size', models.CharField(choices=[('S', 'Small'), ('M', 'Medium'), ('L', 'Large'), ('XL', 'Extra-large')], max_length=3)),
                ('tattoo_category', models.CharField(blank=True, choices=[('Neo Traditional', 'Neo Traditional'), ('Fine Line', 'Fine Line'), ('Tribal', 'Tribal'), ('Watercolor', 'Watercolor'), ('Blackwork', 'Blackwork'), ('Realism', 'Realism'), ('Japanese', 'Japanese'), ('Patchwork', 'Patchwork'), ('Ignorant', 'Ignorant'), ('Portrait', 'Portrait'), ('Animal', 'Animal'), ('Floral', 'Floral')], max_length=30, null=True)),
                ('status', models.IntegerField(choices=[(0, 'Pending'), (1, 'Accepted'), (2, 'Rejected')], default=0)),
                ('contact_way', models.CharField(blank=True, choices=[('Phone call', 'Phone call'), ('Email', 'Email')], max_length=20, null=True)),
                ('artist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='appointment_artist', to='core.artist')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='website_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_on', 'artist'],
            },
        ),
    ]
